$(function(){"use strict";QUnit.module("dropdowns plugin"),QUnit.test("should be defined on jquery object",function(o){o.expect(1),o.ok($(document.body).dropdown,"dropdown method is defined")}),QUnit.module("dropdowns",{beforeEach:function(){$.fn.bootstrapDropdown=$.fn.dropdown.noConflict()},afterEach:function(){$.fn.dropdown=$.fn.bootstrapDropdown,delete $.fn.bootstrapDropdown}}),QUnit.test("should provide no conflict",function(o){o.expect(1),o.strictEqual($.fn.dropdown,void 0,"dropdown was set back to undefined (org value)")}),QUnit.test("should throw explicit error on undefined method",function(o){o.expect(1);var e=$("<div/>");e.bootstrapDropdown();try{e.bootstrapDropdown("noMethod")}catch(e){o.strictEqual(e.message,'No method named "noMethod"')}}),QUnit.test("should return jquery collection containing the element",function(o){o.expect(2);var e=$("<div/>"),n=e.bootstrapDropdown();o.ok(n instanceof $,"returns jquery collection"),o.strictEqual(n[0],e[0],"collection contains element")}),QUnit.test("should not open dropdown if target is disabled via attribute",function(o){o.expect(1);var e='<ul class="tabs"><li class="dropdown"><button disabled href="#" class="btn dropdown-toggle" data-toggle="dropdown">Dropdown</button><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");o.ok(!n.parent(".dropdown").hasClass("open"),'"open" class added on click')}),QUnit.test('should set aria-expanded="true" on target when dropdown menu is shown',function(o){o.expect(1);var e='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");o.strictEqual(n.attr("aria-expanded"),"true",'aria-expanded is set to string "true" on click')}),QUnit.test('should set aria-expanded="false" on target when dropdown menu is hidden',function(o){o.expect(1);var e=o.async(),n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" aria-expanded="false" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();t.parent(".dropdown").on("hidden.bs.dropdown",function(){o.strictEqual(t.attr("aria-expanded"),"false",'aria-expanded is set to string "false" on hide'),e()}),t.trigger("click"),$(document.body).trigger("click")}),QUnit.test("should not open dropdown if target is disabled via class",function(o){o.expect(1);var e='<ul class="tabs"><li class="dropdown"><button href="#" class="btn dropdown-toggle disabled" data-toggle="dropdown">Dropdown</button><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");o.ok(!n.parent(".dropdown").hasClass("open"),'"open" class added on click')}),QUnit.test("should add class open to menu if clicked",function(o){o.expect(1);var e='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");o.ok(n.parent(".dropdown").hasClass("open"),'"open" class added on click')}),QUnit.test("should test if element has a # before assuming it's a selector",function(o){o.expect(1);var e='<ul class="tabs"><li class="dropdown"><a href="/foo/" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");o.ok(n.parent(".dropdown").hasClass("open"),'"open" class added on click')}),QUnit.test('should remove "open" class if body is clicked',function(o){o.expect(2);var e='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");o.ok(n.parent(".dropdown").hasClass("open"),'"open" class added on click'),$(document.body).trigger("click"),o.ok(!n.parent(".dropdown").hasClass("open"),'"open" class removed')}),QUnit.test('should remove "open" class if body is clicked, with multiple dropdowns',function(o){o.expect(7);var e='<ul class="nav"><li><a href="#menu1">Menu 1</a></li><li class="dropdown" id="testmenu"><a class="dropdown-toggle" data-toggle="dropdown" href="#testmenu">Test menu <span class="caret"/></a><ul class="dropdown-menu"><li><a href="#sub1">Submenu 1</a></li></ul></li></ul><div class="btn-group"><button class="btn">Actions</button><button class="btn dropdown-toggle" data-toggle="dropdown"><span class="caret"/></button><ul class="dropdown-menu"><li><a href="#">Action 1</a></li></ul></div>',n=$(e).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]'),t=n.first(),d=n.last();o.strictEqual(n.length,2,"two dropdowns"),t.trigger("click"),o.strictEqual(t.parents(".open").length,1,'"open" class added on click'),o.strictEqual($("#qunit-fixture .open").length,1,"only one dropdown is open"),$(document.body).trigger("click"),o.strictEqual($("#qunit-fixture .open").length,0,'"open" class removed'),d.trigger("click"),o.strictEqual(d.parent(".open").length,1,'"open" class added on click'),o.strictEqual($("#qunit-fixture .open").length,1,"only one dropdown is open"),$(document.body).trigger("click"),o.strictEqual($("#qunit-fixture .open").length,0,'"open" class removed')}),QUnit.test("should fire show and hide event",function(o){o.expect(2);var e='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),t=o.async();n.parent(".dropdown").on("show.bs.dropdown",function(){o.ok(!0,"show was fired")}).on("hide.bs.dropdown",function(){o.ok(!0,"hide was fired"),t()}),n.trigger("click"),$(document.body).trigger("click")}),QUnit.test("should fire shown and hidden event",function(o){o.expect(2);var e='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),t=o.async();n.parent(".dropdown").on("shown.bs.dropdown",function(){o.ok(!0,"shown was fired")}).on("hidden.bs.dropdown",function(){o.ok(!0,"hidden was fired"),t()}),n.trigger("click"),$(document.body).trigger("click")}),QUnit.test("should fire shown and hidden event with a relatedTarget",function(o){o.expect(2);var e='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),t=o.async();n.parent(".dropdown").on("hidden.bs.dropdown",function(e){o.strictEqual(e.relatedTarget,n[0]),t()}).on("shown.bs.dropdown",function(e){o.strictEqual(e.relatedTarget,n[0]),$(document.body).trigger("click")}),n.trigger("click")}),QUnit.test("should ignore keyboard events within <input>s and <textarea>s",function(o){o.expect(3);var e=o.async(),n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li><li><input type="text" id="input"></li><li><textarea id="textarea"/></li></ul></li></ul>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),d=$("#input"),a=$("#textarea");t.parent(".dropdown").on("shown.bs.dropdown",function(){o.ok(!0,"shown was fired"),d.trigger("focus").trigger($.Event("keydown",{which:38})),o.ok($(document.activeElement).is(d),"input still focused"),a.trigger("focus").trigger($.Event("keydown",{which:38})),o.ok($(document.activeElement).is(a),"textarea still focused"),e()}),t.trigger("click")}),QUnit.test("should skip disabled element when using keyboard navigation",function(o){o.expect(1);var e='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li class="disabled"><a href="#">Disabled link</a></li><li><a href="#">Another link</a></li></ul></li></ul>',n=$(e).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");n.trigger($.Event("keydown",{which:40})),n.trigger($.Event("keydown",{which:40})),o.ok(!$(document.activeElement).parent().is(".disabled"),".disabled is not focused")}),QUnit.test("should not close the dropdown if the user clicks on a text field",function(o){o.expect(1);var e='<div class="btn-group"><button type="button" data-toggle="dropdown">Dropdown</button><ul class="dropdown-menu"><li><input id="textField" type="text" /></li></ul></div>',n=$(e).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");$("#textField").trigger("click"),o.ok(n.parent(".btn-group").hasClass("open"),"dropdown menu is open")}),QUnit.test("should not close the dropdown if the user clicks on a textarea",function(o){o.expect(1);var e='<div class="btn-group"><button type="button" data-toggle="dropdown">Dropdown</button><ul class="dropdown-menu"><li><textarea id="textArea"></textarea></li></ul></div>',n=$(e).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");$("#textArea").trigger("click"),o.ok(n.parent(".btn-group").hasClass("open"),"dropdown menu is open")})});