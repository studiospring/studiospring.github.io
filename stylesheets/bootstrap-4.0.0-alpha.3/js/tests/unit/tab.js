$(function(){"use strict";QUnit.module("tabs plugin"),QUnit.test("should be defined on jquery object",function(t){t.expect(1),t.ok($(document.body).tab,"tabs method is defined")}),QUnit.module("tabs",{beforeEach:function(){$.fn.bootstrapTab=$.fn.tab.noConflict()},afterEach:function(){$.fn.tab=$.fn.bootstrapTab,delete $.fn.bootstrapTab}}),QUnit.test("should provide no conflict",function(t){t.expect(1),t.strictEqual($.fn.tab,void 0,"tab was set back to undefined (org value)")}),QUnit.test("should throw explicit error on undefined method",function(t){t.expect(1);var e=$("<div/>");e.bootstrapTab();try{e.bootstrapTab("noMethod")}catch(e){t.strictEqual(e.message,'No method named "noMethod"')}}),QUnit.test("should return jquery collection containing the element",function(t){t.expect(2);var e=$("<div/>"),a=e.bootstrapTab();t.ok(a instanceof $,"returns jquery collection"),t.strictEqual(a[0],e[0],"collection contains element")}),QUnit.test("should activate element by tab id",function(t){t.expect(2);var e='<ul class="tabs"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$('<ul><li id="home"/><li id="profile"/></ul>').appendTo("#qunit-fixture"),$(e).find("li:last a").bootstrapTab("show"),t.strictEqual($("#qunit-fixture").find(".active").attr("id"),"profile"),$(e).find("li:first a").bootstrapTab("show"),t.strictEqual($("#qunit-fixture").find(".active").attr("id"),"home")}),QUnit.test("should activate element by tab id",function(t){t.expect(2);var e='<ul class="pills"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$('<ul><li id="home"/><li id="profile"/></ul>').appendTo("#qunit-fixture"),$(e).find("li:last a").bootstrapTab("show"),t.strictEqual($("#qunit-fixture").find(".active").attr("id"),"profile"),$(e).find("li:first a").bootstrapTab("show"),t.strictEqual($("#qunit-fixture").find(".active").attr("id"),"home")}),QUnit.test("should not fire shown when show is prevented",function(t){t.expect(1);var e=t.async();$('<div class="tab"/>').on("show.bs.tab",function(a){a.preventDefault(),t.ok(!0,"show event fired"),e()}).on("shown.bs.tab",function(){t.ok(!1,"shown event fired")}).bootstrapTab("show")}),QUnit.test("show and shown events should reference correct relatedTarget",function(t){t.expect(2);var e=t.async(),a='<ul class="drop"><li class="dropdown"><a data-toggle="dropdown" href="#">1</a><ul class="dropdown-menu"><li><a href="#1-1" data-toggle="tab">1-1</a></li><li><a href="#1-2" data-toggle="tab">1-2</a></li></ul></li></ul>';$(a).find("ul > li:first a").bootstrapTab("show").end().find("ul > li:last a").on("show.bs.tab",function(e){t.strictEqual(e.relatedTarget.hash,"#1-1","references correct element as relatedTarget")}).on("shown.bs.tab",function(a){t.strictEqual(a.relatedTarget.hash,"#1-1","references correct element as relatedTarget"),e()}).bootstrapTab("show")}),QUnit.test("should fire hide and hidden events",function(t){t.expect(2);var e=t.async(),a='<ul class="tabs"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$(a).find("li:first a").on("hide.bs.tab",function(){t.ok(!0,"hide event fired")}).bootstrapTab("show").end().find("li:last a").bootstrapTab("show"),$(a).find("li:first a").on("hidden.bs.tab",function(){t.ok(!0,"hidden event fired"),e()}).bootstrapTab("show").end().find("li:last a").bootstrapTab("show")}),QUnit.test("should not fire hidden when hide is prevented",function(t){t.expect(1);var e=t.async(),a='<ul class="tabs"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$(a).find("li:first a").on("hide.bs.tab",function(a){a.preventDefault(),t.ok(!0,"hide event fired"),e()}).on("hidden.bs.tab",function(){t.ok(!1,"hidden event fired")}).bootstrapTab("show").end().find("li:last a").bootstrapTab("show")}),QUnit.test("hide and hidden events contain correct relatedTarget",function(t){t.expect(2);var e=t.async(),a='<ul class="tabs"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$(a).find("li:first a").on("hide.bs.tab",function(e){t.strictEqual(e.relatedTarget.hash,"#profile","references correct element as relatedTarget")}).on("hidden.bs.tab",function(a){t.strictEqual(a.relatedTarget.hash,"#profile","references correct element as relatedTarget"),e()}).bootstrapTab("show").end().find("li:last a").bootstrapTab("show")}),QUnit.test("selected tab should have aria-expanded",function(t){t.expect(8);var e='<ul class="nav nav-tabs"><li><a class="nav-item active" href="#home" toggle="tab" aria-expanded="true">Home</a></li><li><a class="nav-item" href="#profile" toggle="tab" aria-expanded="false">Profile</a></li></ul>',a=$(e).appendTo("#qunit-fixture");a.find("li:first a").bootstrapTab("show"),t.strictEqual(a.find(".active").attr("aria-expanded"),"true","shown tab has aria-expanded = true"),t.strictEqual(a.find("a:not(.active)").attr("aria-expanded"),"false","hidden tab has aria-expanded = false"),a.find("li:last a").trigger("click"),t.strictEqual(a.find(".active").attr("aria-expanded"),"true","after click, shown tab has aria-expanded = true"),t.strictEqual(a.find("a:not(.active)").attr("aria-expanded"),"false","after click, hidden tab has aria-expanded = false"),a.find("li:first a").bootstrapTab("show"),t.strictEqual(a.find(".active").attr("aria-expanded"),"true","shown tab has aria-expanded = true"),t.strictEqual(a.find("a:not(.active)").attr("aria-expanded"),"false","hidden tab has aria-expanded = false"),a.find("li:first a").trigger("click"),t.strictEqual(a.find(".active").attr("aria-expanded"),"true","after second show event, shown tab still has aria-expanded = true"),t.strictEqual(a.find("a:not(.active)").attr("aria-expanded"),"false","after second show event, hidden tab has aria-expanded = false")})});