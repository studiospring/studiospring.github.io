<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Studio Spring Blog</title>
  <subtitle>UX</subtitle>
  <id>http://studiospring.com.au</id>
  <link href="http://studiospring.com.au"/>
  <link href="http://studiospring.com.au/feed.xml" rel="self"/>
  <updated>2017-02-10T00:00:00+11:00</updated>
  <author>
    <name>Sean Loughman</name>
  </author>
  <entry>
    <title>Designing keyboard shortcuts</title>
    <link rel="alternate" href="http://studiospring.com.au/2017/designing-keyboard-shortcuts.html"/>
    <id>/2017/designing-keyboard-shortcuts.html</id>
    <published>2017-02-10T00:00:00+11:00</published>
    <updated>2017-02-10T00:00:00+11:00</updated>
    <author>
      <name>Sean Loughman</name>
    </author>
    <summary type="html">&lt;aside&gt;
Despite the proliferation of new input methods, the humble keyboard still gets a good workout and offers features that have not been superseded by the new guard. Here I look at the various factors of ergonomics, speed, reconsiderability, findability, hints, error rates, internationalisation, habituation and collisions that should be considered when designing keyboard shortcuts.
&lt;/aside&gt;
</summary>
    <content type="html">&lt;aside&gt;
Despite the proliferation of new input methods, the humble keyboard still gets a good workout and offers features that have not been superseded by the new guard. Here I look at the various factors of ergonomics, speed, reconsiderability, findability, hints, error rates, internationalisation, habituation and collisions that should be considered when designing keyboard shortcuts.
&lt;/aside&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The use of keyboards don't get a lot of attention these days when designing interfaces, with all these newer input methods like touch, stylus, voice and gesture. Although &lt;a href="http://gs.statcounter.com/press/mobile-and-tablet-internet-usage-exceeds-desktop-for-first-time-worldwide"&gt;in decline for web usage, it still accounts for about 50% of all web traffic&lt;/a&gt;. The fact that tablets have evolved in to 2-in-1 devices also suggests that people still find physical keyboards better for some tasks, most likely for digital creation rather than consumption. As a heavy keyboard user who even minimises trackpad usage, I notice the absence and presence of good keyboard commands aka shortcuts and can see a lot of room for improvement.&lt;/p&gt;

&lt;p&gt;Before discussing design considerations and principles, the first question to ask is "Should we use keyboard shortcuts?" And if so, why and when? Unfortunately, there is not a great deal of research dealing with comparison of input methods relating to keyboard shortcuts. Secondly, the relative merits depend on so many variables that sweeping statements are difficult to make. Instead, I will touch on it &lt;a href="#where-shortcuts-excel"&gt;later&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="ergonomics"&gt;Ergonomics&lt;/h2&gt;
&lt;p&gt;Reducing frequent (and especially unnatural) movements is important in reducing repetitive strain injuries. One such movement is between keyboard and mouse. For keyboard shortcuts, keeping fingers on or near the home row and reducing the use of pinky fingers and finger gymnastics is considered ergonomic.&lt;/p&gt;

&lt;p&gt;I prefer shortcuts pressed by the left hand. This way you can keep your hand on the mouse more, unless you are one of the those &lt;a href="http://www.dailyinfographic.com/left-handed-facts-and-statistics-infographic"&gt;people who uses the mouse with your left hand&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another problem here is that not everyone uses a qwerty keyboard. Some people deliberately change their layout to &lt;a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard"&gt;Dvorak&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Keyboard_layout#Colemak"&gt;Colemak&lt;/a&gt; or other for precisely ergonomic reasons, others use localised keyboards. Some crazies, like myself, customise the layout even further. This means you won't know exactly where all users' keys are. I discuss a solution to this problem of various set ups in the next article.&lt;/p&gt;

&lt;h2 id="speed"&gt;Speed&lt;/h2&gt;
&lt;p&gt;In reducing movement, particularly between &lt;a href="https://ux.stackexchange.com/questions/16155/is-there-any-research-into-the-cost-of-switching-between-using-a-keyboard-and-a"&gt;mouse and keyboard&lt;/a&gt;, and use of mice there tends to be a corresponding &lt;a href="https://ux.stackexchange.com/questions/30682/are-there-any-recent-studies-of-the-keyboard-vs-mouse-issue"&gt;increase in speed&lt;/a&gt;. How much of a difference will depend on &lt;a href="https://en.wikipedia.org/wiki/Fitts's_law"&gt;Fitts's law&lt;/a&gt;. However, this speed comes at the cost of the dreaded learning curve, which I will cover later.&lt;/p&gt;

&lt;h2 id="reconsiderability"&gt;Reconsiderability&lt;/h2&gt;
&lt;p&gt;The flip side of speed is that you do not have time to think through your actions in the same way you do when using a mouse. This is different from undoability. What I call reconsiderability is the chance to reconsider and change your command before you complete it. Confirmation dialogue boxes are a janky way to do this. Keyboard shortcuts are at the extreme since you do not even have to hit return. This makes undo functionality all the more important.&lt;/p&gt;

&lt;h2 id="findability"&gt;Findability&lt;/h2&gt;
&lt;p&gt;I have broken the cognitive effort of keyboard commands in to findability, learnability and habituation. &lt;a href="https://en.wikipedia.org/wiki/Findability"&gt;Findability&lt;/a&gt; tends not to refer to the ease of finding commands within interfaces, because it is usually taken for granted that interfaces can be found. But not so for keyboard shortcuts! Most people do not read the fine manual, so we need some other way of informing them of the presence and value of keyboard shortcuts. People may not even be aware that shortcuts exist for a particular application. For example, did you know that many &lt;a href="https://blog.hubspot.com/marketing/keyboard-shortcuts-facebook-twitter"&gt;popular sites like Facebook and YouTube have shortcuts&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Speaking from personal experience, I often only look for shortcuts after I get frustrated by repeated, tiresome mouse interactions. Shortcuts are only worth the effort of learning in these situations, but wouldn't the experience be more pleasant if I discovered them before getting frustrated?&lt;/p&gt;

&lt;h2 id="learnability"&gt;Learnability&lt;/h2&gt;
&lt;p&gt;Keyboard shortcuts are difficult to learn because they must be remembered and recalled, unlike icons or menus, which can be recognised. It is well known that recall is harder than recognition.&lt;/p&gt;

&lt;p&gt;Standardisation across applications arguably makes the biggest difference to learnability, though it can be a liability to progress in other areas of usability (the qwerty keyboard being a prime example of poor ergonomics).&lt;/p&gt;

&lt;h2 id="habituation"&gt;Habituation&lt;/h2&gt;
&lt;p&gt;One under-appreciated roadblock is the power of habit in conditioning people from using shortcuts. Once you have learnt to use a GUI command method, it takes conscious effort to break the habit. Therefore, it may be worth educating users of the benefits and existence of shortcuts before mouse commands become a habit.&lt;/p&gt;

&lt;h2 id="hints"&gt;Hints&lt;/h2&gt;
&lt;p&gt;keyboard shortcuts generally provide fewer hints about their actions than icons. Often if you hover over an icon, a tooltip will give you another hint about what the icon does. Some actions also show an error message if the command fails. More often than not, there are no hints provided before or after a shortcut is executed. Providing hints to shortcuts would reduce errors and cognitive load.&lt;/p&gt;

&lt;p&gt;The needs of casual users and novices also needs to be considered. These users will initially or never need shortcuts, so shortcut hints should not be intrusive. One possible solution is to detect the "density" of command invocation, that is how frequently a command is invoked within a given time frame and only suggest the shortcut when the user is "ready".&lt;/p&gt;

&lt;h2 id="error-rate"&gt;Error rate&lt;/h2&gt;
&lt;p&gt;Reducing cognitive and to a lesser degree typing errors is a consideration in designing keyboard shortcuts. Cognitive errors include misremembering the keys to press or misunderstanding what a command actually does. If the cognitive load of shortcuts cannot be reduced, for example through hints or feedback, it is especially important to be able to easily undo an action.&lt;/p&gt;

&lt;h2 id="i18n"&gt;I18n&lt;/h2&gt;
&lt;p&gt;Keyboard shortcuts are also harder to internationalise than icons or menus (though these can be difficult too). Mnemonics like "S" for save may not make sense. There may be a case to be made for localising keyboard shortcuts. Some salient points are raised on this &lt;a href="https://stackoverflow.com/questions/484174/strategies-for-localising-keyboard-shortcuts"&gt;StackOverflow thread&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id="keyboard-collisions"&gt;Keyboard collisions&lt;/h1&gt;
&lt;p&gt;Various layers of software from operating system, application, to plugin have different shortcuts and conventions. Obviously, when choosing a keyboard shortcut, you usually don't want to override an existing shortcut on another software layer (although, sometimes you do!). Another problem is that you probably won't know what operating system or applications a user is running. Wikipedia has a comprehensive, though unwieldy, &lt;a href="https://en.wikipedia.org/wiki/Table_of_keyboard_shortcuts"&gt;table of keyboard shortcuts&lt;/a&gt; for common desktop environments and text editors.&lt;/p&gt;

&lt;p&gt;Most UX designers are probably not familiar with &lt;a href="https://en.wikipedia.org/wiki/Emacs"&gt;Emacs&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Vim_(text_editor)"&gt;Vim&lt;/a&gt; and may be wondering why these are listed in the Wikipedia page. These text editors were and are used by the programmers and computer boffins who gave us GUIs and all the other magic that we use today&lt;sup&gt;&lt;a href="#footnotes"&gt;1&lt;/a&gt;&lt;/sup&gt;. Therefore, it was natural and sensible for GUIs (and &lt;a href="https://en.wikipedia.org/wiki/Text-based_user_interface"&gt;TUIs&lt;/a&gt;) to use the same shortcuts that these text editors use. These conventions based on text editors that most keyboard users no longer use may seem antiquated and ripe for reinvention, but their user base is large and these conventions have rooted themselves in more "modern" software. If you are wondering why something like Control-K cuts text without the need to select it first in some Mac applications, it comes from Emacs. One other thing to keep in mind is that most people only use one of these text editors and so are not that familiar with the other's shortcuts.&lt;/p&gt;

&lt;p&gt;One partial solution is to assign specific modifier keys (like Apple's ⌘ or Windows key) to different software layers, for example, using the ⌘ key for OS level shortcuts and alt/option key for application specific shortcuts. This can work if the modifier key can be changed so that collisions between modifier keys can be avoided and the user can choose the key that best suits their circumstances. One minor issue is that this can create two different shortcuts for the same operation, e.g. undo for a desktop app and undo for a web app.&lt;/p&gt;

&lt;p&gt;Another solution is modal commands. This is how Vim works and is somewhat similar to using the caps lock key, which changes the output of all subsequent key presses. Thus, for a graphics application, you could have a layers mode, so that subsequent keys controlled layers, a selection mode and so on.&lt;/p&gt;

&lt;p&gt;Another issue here is users who rely on keyboards to navigate for accessibility reasons. Again, different applications use different shortcuts. Here are the shortcuts for some popular screen readers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://webaim.org/resources/shortcuts/jaws"&gt;Jaws&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.apple.com/voiceover/info/guide/_1131.html"&gt;VoiceOver&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://webaim.org/resources/shortcuts/nvda"&gt;NVDA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="where-shortcuts-excel"&gt;Where shortcuts excel&lt;/h2&gt;
&lt;p&gt;Keyboard shortcuts need to be memorised to be effective, so are most useful to "power users". However, computers are such a critical tool these days that most knowledge workers need to accept that they are "power users" of certain applications. As such, most computer users will benefit from keyboard shortcuts. They should be used where their benefits relative to other input methods of reduced injury and speed outweigh their relative disadvantages of cognitive load. This means frequently used commands are best suited to keyboard shortcuts.&lt;/p&gt;

&lt;p&gt;Although most GUI keyboard shortcuts are single commands without options, in command line interfaces very complicated multi-argument commands are the norm. These may not fit in to the category of keyboard shortcuts, but they have many design elements that are worth stealing.&lt;/p&gt;

&lt;h2 id="recommendations-for-shortcuts"&gt;Recommendations for shortcuts&lt;/h2&gt;
&lt;p&gt;In designing shortcuts, we want to reduce its inherent weaknesses of cognitive load and improve its strengths of efficiency and ergonomics through the following (roughly in order of importance):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Avoid collisions&lt;/li&gt;
  &lt;li&gt;Be consistent with other conventions&lt;/li&gt;
  &lt;li&gt;Choose mnemonic keys&lt;/li&gt;
  &lt;li&gt;Choose ergonomic keys&lt;/li&gt;
  &lt;li&gt;Provide hints before and during use&lt;/li&gt;
  &lt;li&gt;Make sure shortcut commands can be easily undone&lt;/li&gt;
  &lt;li&gt;Allow customisation (bonus points for providing an Emacs and Vim option)&lt;/li&gt;
  &lt;li&gt;Provide a cheat sheet&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="in-real-life"&gt;In Real Life&lt;/h2&gt;
&lt;p&gt;Let's have a look at the popular cut-copy-paste command and see what happens to these design principles "in real life". The copy-paste name was invented by Larry Tesler, an early UX designer at Xerox PARC. He has written a great &lt;a href="http://worrydream.com/refs/Tesler%20-%20A%20Personal%20History%20of%20Modeless%20Text%20Editing%20and%20Cut-Copy-Paste.pdf"&gt;personal
account of the motivations and context behind the design&lt;/a&gt; (pdf). However, the &lt;a href="https://en.wikipedia.org/wiki/Cut,_copy,_and_paste"&gt;shortcut keys for these commands were popularised by the Apple Lisa in 1983&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href="https://www.flickr.com/photos/blakespot/2385128334"&gt;&lt;img src="/images/2017/apple_lisa_keyboard.jpg" /&gt;&lt;/a&gt;
  &lt;figcaption&gt;Figure 1: The Apple Lisa Keyboard. Photo credits: &lt;a href="https://www.flickr.com/photos/blakespot/"&gt;Blake Patterson&lt;/a&gt; &lt;a href="https://creativecommons.org/licenses/by/2.0/"&gt;&lt;img class="cc-logo-text" src="/images/shared/cc.min.svg" alt="Creative Commons Attribution 2.0" /&gt;&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At that point, Emacs and vi already had keyboard commands for copy pasting, but Apple being Apple (and the Emacs/vi commands not being so intuitive), they decided to do things differently. Collisions have obviously been avoided, most particularly with "P" for print. Although there is a mnemonic with ⌘-C, the other keys seem to have been clustered together for ergonomic reasons since the commands are used together. With so many competing needs, choosing a key is clearly a fine balancing act, even for something as important as copy-paste and even so early in computing history.&lt;/p&gt;

&lt;h2 id="conclusions"&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;Designing the perfect keyboard shortcut seems all but impossible. There are so many variables regarding the users, their work space and work flow, so you are almost guaranteed to produce an unsatisfactory solution for some users. Furthermore, the user base is probably a minority. However, there is an answer that neatly side-steps a lot of the issues I have raised. In my next post, I will look at this solution that is gaining popularity and how it can be improved even further.&lt;/p&gt;

&lt;h2 id="footnotes"&gt;Footnotes&lt;/h2&gt;
&lt;ol id="footnotes"&gt;
  &lt;li&gt;
    Vim is the spiritual successor to &lt;a href="https://en.wikipedia.org/wiki/Vi"&gt;vi&lt;/a&gt;, which originally developed modal editing and much other goodness.
  &lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>The what and why of design mentoring</title>
    <link rel="alternate" href="http://studiospring.com.au/2016/mentoring.html"/>
    <id>/2016/mentoring.html</id>
    <published>2016-11-28T00:00:00+11:00</published>
    <updated>2016-11-28T00:00:00+11:00</updated>
    <author>
      <name>Sean Loughman</name>
    </author>
    <summary type="html">&lt;aside&gt;
  Mentoring is an under-utilised method of professional development whose value, I think, will become more apparent as the design industry matures. Having had some experience on both sides of the fence, as a design tutor at uni, and more recently as a mentee, it is an enriching exchange for both sides and needs to be promoted as such.
&lt;/aside&gt;
</summary>
    <content type="html">&lt;aside&gt;
  Mentoring is an under-utilised method of professional development whose value, I think, will become more apparent as the design industry matures. Having had some experience on both sides of the fence, as a design tutor at uni, and more recently as a mentee, it is an enriching exchange for both sides and needs to be promoted as such.
&lt;/aside&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Design is a craft. It is an art and a science. It has theory and practice. Some parts are best learnt in a classroom, other parts can only be learnt through experience. A lot of attention has been paid to the teaching of theory, but practical training has been neglected or co-opted by academia. This is where mentoring comes in and fills the gap.&lt;/p&gt;

&lt;p&gt;In pre-industrial times, professional crafts were organised in to guilds, with one function being the accreditation of mastery in that craft. It was only through apprenticeship with a master (or masters) that one could become and be recognised as a master. These days, we share case studies, tips and tricks online and at conferences, but in-depth and personal guidance is often lacking. Mentoring is something few people take part in and is considered by some to be a sign of inexperience.&lt;/p&gt;

&lt;p&gt;I believe this kind of guidance becomes all the more important as soft skills play a greater role in our work. Soft skills like stakeholder management and design thinking can be developed and perfected endlessly, but are not easily adopted if learnt from a book or even lecture. They need practice and guidance.&lt;/p&gt;

&lt;p&gt;Mentoring is somewhat like a long distance apprenticeship. You can touch base with your mentor with specific questions relating to your practice and get an impartial opinion on how you might improve. &lt;a href="https://en.wikipedia.org/wiki/Rubber_duck_debugging"&gt;Rubber ducking&lt;/a&gt; is another role that your mentor can play. Simply by talking through a problem, the answer can become clearer. Finally, as well as getting a different perspective or approach to a problem, you may find that your mentor agrees with your solution. Receiving that validation that you are doing the right thing is also very empowering and beneficial.&lt;/p&gt;

&lt;p&gt;Although mentoring is a great tool for professional development with unique and compelling advantages, I can't help but think that in some ways it is inferior to a traditional master who watches over your work. Aside from the intermittent contact, which prevents real-time advice, you can't really 'steal from the teacher' by watching how they work. If you are lucky enough to be working with talented peers, then you can engage in some 'stealth' mentoring.&lt;/p&gt;

&lt;p&gt;Perhaps the biggest barrier to mentoring is actually finding a suitable mentor (or even any mentor). The supply of mentors rarely keeps up with the demand from mentees. This may partly be because it is difficult to see the benefits of becoming a mentor, while the benefits to a mentee are quite clear. So, let's have a look at the benefits of being a mentor.&lt;/p&gt;

&lt;p&gt;Not only does mentoring broaden your professional network and look good on your resume, it also solidifies your knowledge and deepens your understanding. If you have a good mentee, your own ideas will be challenged and you can see things from a beginner's perspective. It keeps your thinking fresh and breaks down your mental models of design that harden with experience by forcing you to return to the underlying principles of design. Mentoring is also a great chance to practise the fine art of giving feedback and critiquing design. The best mentors give hints so that a mentee can make the journey of discovery for themselves and own the solution rather than provide prescriptive solutions. It also happens to be good fun.&lt;/p&gt;

&lt;p&gt;Industry is short of senior designers and many designers are the sole designer in an organisation. Mentoring can elevate practical skills across the industry in a way that few other techniques can. Mentoring should be a prerequisite to being recognised as a senior designer, especially when soft skills are so highly valued. We need employers to expect their senior designers to be mentors. There should also be an obligation that mentees become mentors as a way of paying it forward. If we can raise the prestige and value of mentoring, designers and design will be better off for it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A new model for design and innovation</title>
    <link rel="alternate" href="http://studiospring.com.au/2016/double-doughnut.html"/>
    <id>/2016/double-doughnut.html</id>
    <published>2016-09-02T00:00:00+10:00</published>
    <updated>2016-09-02T00:00:00+10:00</updated>
    <author>
      <name>Sean Loughman</name>
    </author>
    <summary type="html">&lt;aside&gt;
  Design has embraced lean and agile workflows and best practice has evolved. Innovation is becoming more important and these practices, adopted from the start up world, are becoming indispensable. Yet models like the double diamond remain unchanged. How can we better describe the process of design and innovation which designers follow today, so that team members and decision makers can understand it and make it a whole-of-organisation process?
&lt;/aside&gt;
</summary>
    <content type="html">&lt;aside&gt;
  Design has embraced lean and agile workflows and best practice has evolved. Innovation is becoming more important and these practices, adopted from the start up world, are becoming indispensable. Yet models like the double diamond remain unchanged. How can we better describe the process of design and innovation which designers follow today, so that team members and decision makers can understand it and make it a whole-of-organisation process?
&lt;/aside&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;If you are a designer, you are probably familiar with the &lt;a href="http://webarchive.nationalarchives.gov.uk/20080821115409/designcouncil.org.uk/en/about-design/managingdesign/the-study-of-the-design-process/"&gt;double diamond&lt;/a&gt; design process model. It was created by the British Design Council in 2005 and is still taught in design schools today. Since then, the process of design has changed, most notably with the adoption of agile practices and a start up mentality. Newer design process models have appeared, but I do not think they illustrate current best practice. Here's my attempt at fixing that.&lt;/p&gt;

&lt;figure&gt;
  &lt;figcaption&gt;Figure 1: The British Design Council's double diamond.&lt;/figcaption&gt;
  &lt;img src="/images/2016/double_diamond.min.svg" /&gt;
&lt;/figure&gt;

&lt;p&gt;First, let's set the scene with a little history about design process models. The earliest model that I am aware of is the &lt;a href="https://www.goodreads.com/book/show/592952.Universal_Traveler"&gt;&lt;em&gt;Universal Traveler's&lt;/em&gt;&lt;/a&gt; &lt;a href="https://www.brainpickings.org/2011/11/11/the-universal-traveler-koberg-bagnall/"&gt;"Traveler's Map"&lt;/a&gt;. This was developed in the 1970s and is remarkably similar to the models that have developed since, suggesting that there is a fundamental approach to creative problem solving. Compared to current thinking, it is a little light on user-centredness, focusing more on the creative process, now known as &lt;a href="https://en.wikipedia.org/wiki/Design_thinking#cite_note-21"&gt;design thinking&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next came the double diamond. What is nice about this model is that it reveals the broadening and narrowing of scope along the design process. The &lt;strong&gt;discovery&lt;/strong&gt; phase is one of casting a broad research net to understand the problem, then distilling that in to a clearly &lt;strong&gt;defined&lt;/strong&gt; problem. &lt;strong&gt;Development&lt;/strong&gt; also expands in scope as you let go of constraints and ideate, only to narrow down and refine the solutions that you ultimately &lt;strong&gt;deliver&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The other well known model is the Stanford d.school &lt;a href="http://dschool.stanford.edu/redesigningtheater/the-design-thinking-process/"&gt;design thinking process&lt;/a&gt;. This model is also linear and follows a similar process, but is presented somewhat simplistically. It has since been &lt;a href="https://dschool.stanford.edu/groups/k12/wiki/17cff/Steps_in_a_Design_Thinking_Process.html"&gt;updated&lt;/a&gt; to be more cyclical, at the expense of simplicity.&lt;/p&gt;

&lt;figure&gt;
  &lt;figcaption&gt;Figure 2: The Stanford d.school design thinking process.&lt;/figcaption&gt;
  &lt;img src="/images/2016/dschool_process.min.svg" /&gt;
&lt;/figure&gt;

&lt;p&gt;Most recently, there have been a number of lean and agile &lt;a href="http://lithespeed.com/lean-ux-dont-part-1-3-2/"&gt;models&lt;/a&gt; which try to show how design fits in. Because agile was developed by programmers, most models are very developer focused and lack a design thinking approach or user focus. The other notable difference is that they are emphatically cyclical unlike previous models. Yet, to my knowledge, there is no authoritative model that designers turn to in order to explain how design can be lean and agile.&lt;/p&gt;

&lt;p&gt;To solve this problem, I have created a new model and in (a cheeky) homage to the double diamond, named it &lt;strong&gt;&lt;em&gt;The Double Doughnut&lt;/em&gt;&lt;/strong&gt;. It can be divided in to two parts and 6 steps. Though I have broken this process into discrete steps, I prefer to see it as a seamless process with ill-defined boundaries at best.&lt;/p&gt;

&lt;figure&gt;
  &lt;figcaption&gt;Figure 3: The double doughnut.&lt;/figcaption&gt;
  &lt;img id="double-doughnut" src="/images/2016/double_doughnut.min.svg" /&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Exploration&lt;/strong&gt; involves designing a research method and gathering information to understand the problem. Even in later iterations, after a product has been released, there is an exploration to understand problems that arise in the current release.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Analysis&lt;/strong&gt; is the process of turning information into knowledge to gain a thorough (but shallow) understanding of the problem-scape.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insight&lt;/strong&gt; is the deep understanding of a problem by distilling it into root causes and interrelationships of various parts of the problem-scape. You should be asking the &lt;a href="https://en.wikipedia.org/wiki/5_Whys"&gt;5 whys&lt;/a&gt; throughout the entire problem identification stage, but it is particularly important here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ideation&lt;/strong&gt; is the unconstrained generation of the seeds of ideas, to be weeded or cultivated later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Synthesis&lt;/strong&gt; is the convergence of problem, idea and constraints to form a practical solution and reject lesser ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Evaluation&lt;/strong&gt; is the assessment of a solution's effectiveness by testing with users for the purpose of refining a design. Testing can mean testing a prototype or measuring the effectiveness of a shipped product. Implicit in this step is the understanding that design is never finished and can always be improved.&lt;/p&gt;

&lt;p&gt;It is also worth noting that each circle - problem identification and solution development - can be repeated before progressing to the other circle. So, a couple of research cycles may be needed before the right questions are being asked or the problem is understood well enough to start solving with designs.&lt;/p&gt;

&lt;p&gt;Initially, I thought I could call the double doughnut a design process, but on reflection, it is more than that. It actually is an innovation process. Design is no longer a silo that can be practised within just the design team. Design is no longer just a means of "solving the right problem and solving the problem right". Let's also ask ourselves if we can solve the problem in a fundamentally different and better way by looking at the problem from the ground up. By placing equal importance on the research phase as the design phase (double diamond), exercising design thinking (d.school), iterating in small sprints (agile) and learning from our experiences (lean), it is about innovating (i.e. meeting the needs of the customer in a better way not done before) quickly and competitively. For designers to maximise their potential and innovate, (establishing, rather than just reusing design patterns) the process of innovation needs to be understood and supported by all stakeholders in the organisation. Hopefully, this diagram can help in this regard.&lt;/p&gt;

&lt;p&gt;Finally, I want to examine the complementary nature of the steps in the two circles to thoroughly understand this process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exploration-ideation&lt;/strong&gt;: exploration and ideation are the initial understandings of the problem and solutions respectively. Because you are bootstrapping your understanding of a problem, exploration requires the creativity to imagine scenarios and hypothesise about areas that are worthy of study. Likewise, ideation requires an exploratory mindset in which you probe, question and discover the unimagined.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Analysis-synthesis&lt;/strong&gt;: both are intermediate steps involving information or ideas that produce patterns or designs which are greater than the sum of their parts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insight-testing&lt;/strong&gt;: both are a true understanding of the problem and solution respectively. Only by understanding the root of a problem do you truly understand it. Only by seeing a solution through the eyes of the user do you truly understand its effectiveness.&lt;/p&gt;

&lt;p&gt;The double doughnut elegantly illustrates the marriage of traditional design thinking and newer, start up inspired practices. Unsurprisingly, this new best practice encourages user centred innovation. However, it is an end-to-end process that is diminished when even one part is omitted. To execute this process successfully, design thinking must pervade the entire process and users' needs must be given equal weight with business needs and social responsibilities to keep a product competitive.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Understanding heuristics to communicate better</title>
    <link rel="alternate" href="http://studiospring.com.au/2016/heuristics-and-communication.html"/>
    <id>/2016/heuristics-and-communication.html</id>
    <published>2016-08-09T00:00:00+10:00</published>
    <updated>2016-08-09T00:00:00+10:00</updated>
    <author>
      <name>Sean Loughman</name>
    </author>
    <summary type="html">&lt;aside&gt;
  Ever had someone ignore your perfectly rational argument and go against your advice? It could be heuristics! Communication skills are vital to the design profession. Read on and you too can use &lt;em&gt;cognitive bias mitigation&lt;/em&gt; to persuade people better!
&lt;/aside&gt;
</summary>
    <content type="html">&lt;aside&gt;
  Ever had someone ignore your perfectly rational argument and go against your advice? It could be heuristics! Communication skills are vital to the design profession. Read on and you too can use &lt;em&gt;cognitive bias mitigation&lt;/em&gt; to persuade people better!
&lt;/aside&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Soft skills, like collaboration and stakeholder management, are now accepted as vital skills in the design profession. It is also generally understood that we need to tailor our message to different audiences, whether the audience is a different personality or behavioural type, or a different stakeholder within a team. By speaking on the same wavelength, be that emotional or technical, we can convey the intended message and are better able to persuade. I want to show you how to become a better communicator and facilitator by telling you about heuristics and how it influences communication.&lt;/p&gt;

&lt;p&gt;Everyone uses heuristics (also known as rules of thumb or mental short cuts). It saves us time and effort in making judgments. However, it also short circuits our thinking and makes us think in certain ways. I want to examine some pitfalls when using heuristics to communicate design decisions and how to overcome them. In this article I am referring to heuristics relating to general decision-making, not design related heuristics like design patterns or Nielsen's usability heuristics.&lt;/p&gt;

&lt;p&gt;Designers communicate to persuade management, clients or other designers of the value of their work. What they are actually (or should be) communicating are the risks (i.e. the likelihood of success) and rewards of adopting a potential solution. And then the risks and accompanying rewards of all the other possible solutions have to be weighed up to determine the best choice. No wonder heuristics are used!&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2016/risk_reward_matrix.min.svg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;And as you can see from the diagram, when some rule of thumb offers you a quick solution, heuristics seem to help you select the best choice: low risk, high reward. But they can, according to &lt;a href="https://en.wikipedia.org/wiki/Heuristic#History"&gt;Wikipedia&lt;/a&gt;, lead to suboptimal decisions. I think this is because many heuristics are founded on the premise that past performance is a reliable indicator of future performance (called the &lt;a href="https://en.wikipedia.org/wiki/Familiarity_heuristic"&gt;familiarity heuristic&lt;/a&gt;). Another one is the &lt;a href="https://en.wikipedia.org/wiki/Similarity_heuristic"&gt;similarity heuristic&lt;/a&gt;, which people use to select an option that is similar to something that produced a positive experience in the past. More innovative choices are riskier by virtue of their novelty. So, heuristic based decisions can stifle innovation and variety, which leads to solutions that are suboptimal for the business and the user.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2016/risk_reward_innovation_matrix.min.svg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Adding a third axis of innovation on the next diagram shows how heuristics fall short when measured for innovation, leading to potentially inferior design decisions. When you only choose options based on heuristics your choices suddenly seem quite limited.&lt;/p&gt;

&lt;p&gt;And when you, the designer, argue for an optimal solution, decision-makers often lean on heuristics to reach a decision efficiently and minimize perceived risk. The prettiness of a presentation or amount of work perceived to have been put in to it, the latest buzzword or bandwagon are often used to weigh up the argument at hand, instead of judging a proposal purely on its merits. All these signals are useful and important indicators of risk and reward that influence almost everyone to some extent, but they are not always the most reliable indicators and are biased towards established solutions. This is actually an area of study called &lt;a href="https://en.wikipedia.org/wiki/Cognitive_bias_mitigation"&gt;"cognitive bias mitigation"&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, heuristics have pros and cons, but if you understand them and the person you are speaking to, you can argue a case more convincingly. First, get on a positive footing by speaking to the heuristic that they use, even if it's not the best or most reliable measure to judge by. Then, reinforce the argument with objective information that can be used to make a rational decision. You also then have a better chance of arguing other points based on that objective information.&lt;/p&gt;

&lt;p&gt;When heuristics work against you, persuasion is obviously more difficult. One answer is to provide enough information about the choices to make a well thought out decision by doing more research or taking a lean approach and testing and failing fast. Another is to leverage other heuristics that work in your favour, for example, "Company X in industry Y is having great success with Z."&lt;/p&gt;

&lt;p&gt;Another way would be to remind the decision-maker of the consequences of making a wrong decision. Doing this will make them expend more cognitive effort and think through the problem more objectively. When you do this, you will obviously need clear data points to base a decision on for all your choices, because otherwise they will have no choice but to fall back on heuristics.&lt;/p&gt;

&lt;p&gt;What makes heuristics such a necessary and fascinating design (and life!) tool, is that everyone uses it is and everyone uses it unconsciously. If you are aiming to produce the best possible outcome and not just 'satisfice', it pays to have a proper understanding of the tools in your tool belt. As a UX designer, I propose solutions and facilitate decision-making, so knowing how to persuade is critical. As a facilitator, the secret to using heuristics appropriately is to know what heuristics are being used by others and leveraging them where possible or discouraging their use and offering a better basis for deciding so that it is easy for others to make decisions wisely.&lt;/p&gt;
</content>
  </entry>
</feed>
